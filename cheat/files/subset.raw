VE#
###############################################################
Hive Read / Print sequence files
dfs -text /camus/exec/history/topic/2015-06-16-07-08-14/offsets-m-00000;

Hive Describe / show partition information (e.g. location of underlying folder in hadoop)
DESCRIBE FORMATTED my_table PARTITION (year=2015,month=03,day=15);

Hive Print columns names / headers in CLI
SET hive.cli.print.header=true;

Hive show name of current database on CLI prompt
SET hive.cli.print.current.db=true;

Hive create database / schema
CREATE DATABASE test;

Hive create view
CREATE VIEW view_name(vw_field1, vw_field2)
AS SELECT field1, field2 FROM base_table;

Hive lock table
LOCK TABLE my_table;

Hive lock table partition
LOCK TABLE my_table partition(dt='2015-05-06');

Hive unlock table
UNLOCK TABLE my_table;

Hive unlock partition
UNLOCK TABLE my_table partition(dt='2015-05-06');

Hive rename table
ALTER TABLE table_name RENAME TO new_table_name

Hive add column to a table
ALTER TABLE my_table ADD new_column string;

Hive rename column
ALTER TABLE my_table CHANGE old_column new_column string;

Hive default CLI log file location
/tmp/nameofuser

Hive select where contain a regex like
SELECT * FROM table WHERE field RLIKE 'REGEX'

Hive Check version of client running
ps -aux | grep -i "hive"

Hive create table example
CREATE TABLE my_table(id int, val string) 
COMMENT 'my table!' 
PARTITIONED BY (dt string)

Hive create table as (CTAS)
CREATE TABLE my_table(id int) AS SELECT id from other_table;

Hive Drop table partition
ALTER TABLE my_table DROP PARTITION (partition_field = 'partition_value',...);

Hive Drop multiple partitions
ALTER TABLE foo DROP PARTITION(ds < 'date');

Hive Insert into partition / add partition
INSERT INTO my_table PARTITION (dt='2014-01-01')
SELECT * from ...;

Hive add partition to external table
ALTER TABLE my_table ADD PARTITION (dt='2014-01-29') location 'hdfs:///asfd';

Hive load data (file on local(my computer))
LOAD DATA LOCAL INPATH './my_file.tsv' OVERWRITE INTO TABLE my_table;

Hive load data (file in HDFS)
LOAD DATA INPATH '/somewhere/on/hadoop.tsv'
OVERWRITE INTO TABLE my_table PARTITION (ds='2014-01-13');

Hive prevent accidental dropping of a table
ALTER TABLE my_table ENABLE/DISABLE NO DROP CASCADE;

Hive Describe function
DESCRIBE FUNCTION EXTENDED function_name;

Hive Show functions
SHOW FUNCTIONS;

Hive Add jars
ADD JAR /path/to/jar/on/local;

Hive Add functions / UDFs
CREATE TEMPORARY FUNCTION nvl AS 'com.company.hive.udf.GenericUDFNVL';

Hive data types
Numeric: tinyint, smallint, int, bigint, float, double, decimal
Date / Time: timestamp, date
Complex: array, map<key, value>, struct, union

Add multiple partitions to a HIVE external table (ruby / irb)
(Date.new(2015,2,20)..Date.new(2015,6,12)).each do |x|
   puts "alter table your_hive_table add partition (#{x.strftime('year=%Y,month=%m,day=%d')}) location 'hdfs:///hdfs/folder/#{x.strftime('%Y/%m/%d')}';"
end

Hive truncate table
TRUNCATE TABLE my_table;

Hive recover partitions for "non-external" tables
MSCK REPAIR TABLE my_table;

Hive list of databases
SHOW DATABASES;

Hive list all tables in current database
SHOW TABLES;

Hive run query from command line
hive -e "SELECT * from table;"

Hive run query from from file
hive -f "SELECT * from table;"

Hive CLI run bash command
!cat /tmp/file.txt

Hive show all variables
SET;

Hive if syntax
if(boolean testCondition, T valueTrue, T valueFalseOrNull)

Hive convert unix timestamp to a date in specified format
from_unixtime(unix_timestamp_field,'yyyy-MM-dd')

Hive convert unix timestamp to a date in MySQL format e.g. 1970-01-01 00:00:00
from_unixtime(unix_timestamp_field)

Hive get current unix timestamp in seconds
unix_timestamp()

Hive number of days from start to end date / datediff
datediff('2009-03-01', '2009-02-27') = 2

Hive add days to a date
date_add('2008-12-31', 1)

Hive subtract days from a date
date_sub('2008-12-31', 1) 

Hive change timezone of a timestamp that is in UTC
from_utc_timestamp('1970-01-01 08:00:00','PST') 

Hive change timezone to UTC of a timestamp that is in a different timezone
to_utc_timestamp('1970-01-01 00:00:00','PST')

Hive current date / timestamp
current_date / current_timestamp

Hive check if null
isnull(a)

Hive case statement
CASE a WHEN b THEN c WHEN d THEN e ELSE f END

Hive greatest value, compare values
greatest(v1, v2, ...)

Hive lowest value, compare values
lowest(v1, v2, ...)

Hive function for concatenate strings
concat(‘foo’, ‘bar’, ...) ;

Hive function for position of first occurrence in string
instr(string str, string substr)

Hive function for size / length of a string
length("str") ; 

Hive function to lowercase / uppercase a string
lower(string A) or upper(string A)

Hive function to capitalize first letter of every word / name capitalization
initcap("test str") -- => Test Str

Hive function to calculate distance between two strings levenshtein
levenshtein(string A, string B)

Hive function to trim / strip spaces from string
trim ("  str  ") or ltrim("   str") or rtrim("str   ")

Hive function to split a string by regex pattern(returns array)
split(string str, string pattern)

Hive function to substring a field / column
substr(string, int start, int len);

Hive parse JSON field using Json tuple and lateral view
{"id": "12345", "field1": "text", "field2": "text"}
SELECT a.field1, a.field2 FROM my_table
lateral view json_tuple(a.raw, 'field1', 'field2')a as field1, field2;

Hive parse json string
{"id": "12345", "field1": { "inner1": "text"}}
SELECT get_json_object(my_tbl.event_data, '$.field1.inner1') from my_string_table;

Hive comment a line (only works in scripts)
-- my comment


