[{"id":"0VE#","section":"VE#","description":"Hive Read / Print sequence files","command":"dfs -text /camus/exec/history/topic/2015-06-16-07-08-14/offsets-m-00000;"},{"id":"1VE#","section":"VE#","description":"Hive Describe / show partition information (e.g. location of underlying folder in hadoop)","command":"DESCRIBE FORMATTED my_table PARTITION (year=2015,month=03,day=15);"},{"id":"2VE#","section":"VE#","description":"Hive Print columns names / headers in CLI","command":"SET hive.cli.print.header=true;"},{"id":"3VE#","section":"VE#","description":"Hive show name of current database on CLI prompt","command":"SET hive.cli.print.current.db=true;"},{"id":"4VE#","section":"VE#","description":"Hive create database / schema","command":"CREATE DATABASE test;"},{"id":"5VE#","section":"VE#","description":"Hive create view","command":"CREATE VIEW view_name(vw_field1, vw_field2)\nAS SELECT field1, field2 FROM base_table;"},{"id":"6VE#","section":"VE#","description":"Hive lock table","command":"LOCK TABLE my_table;"},{"id":"7VE#","section":"VE#","description":"Hive lock table partition","command":"LOCK TABLE my_table partition(dt='2015-05-06');"},{"id":"8VE#","section":"VE#","description":"Hive unlock table","command":"UNLOCK TABLE my_table;"},{"id":"9VE#","section":"VE#","description":"Hive unlock partition","command":"UNLOCK TABLE my_table partition(dt='2015-05-06');"},{"id":"10VE#","section":"VE#","description":"Hive rename table","command":"ALTER TABLE table_name RENAME TO new_table_name"},{"id":"11VE#","section":"VE#","description":"Hive add column to a table","command":"ALTER TABLE my_table ADD new_column string;"},{"id":"12VE#","section":"VE#","description":"Hive rename column","command":"ALTER TABLE my_table CHANGE old_column new_column string;"},{"id":"13VE#","section":"VE#","description":"Hive default CLI log file location","command":"/tmp/nameofuser"},{"id":"14VE#","section":"VE#","description":"Hive select where contain a regex like","command":"SELECT * FROM table WHERE field RLIKE 'REGEX'"},{"id":"15VE#","section":"VE#","description":"Hive Check version of client running","command":"ps -aux | grep -i \"hive\""},{"id":"16VE#","section":"VE#","description":"Hive create table example","command":"CREATE TABLE my_table(id int, val string)\nCOMMENT 'my table!'\nPARTITIONED BY (dt string)"},{"id":"17VE#","section":"VE#","description":"Hive create table as (CTAS)","command":"CREATE TABLE my_table(id int) AS SELECT id from other_table;"},{"id":"18VE#","section":"VE#","description":"Hive Drop table partition","command":"ALTER TABLE my_table DROP PARTITION (partition_field = 'partition_value',...);"},{"id":"19VE#","section":"VE#","description":"Hive Drop multiple partitions","command":"ALTER TABLE foo DROP PARTITION(ds < 'date');"},{"id":"20VE#","section":"VE#","description":"Hive Insert into partition / add partition","command":"INSERT INTO my_table PARTITION (dt='2014-01-01')\nSELECT * from ...;"},{"id":"21VE#","section":"VE#","description":"Hive add partition to external table","command":"ALTER TABLE my_table ADD PARTITION (dt='2014-01-29') location 'hdfs:///asfd';"},{"id":"22VE#","section":"VE#","description":"Hive load data (file on local(my computer))","command":"LOAD DATA LOCAL INPATH './my_file.tsv' OVERWRITE INTO TABLE my_table;"},{"id":"23VE#","section":"VE#","description":"Hive load data (file in HDFS)","command":"LOAD DATA INPATH '/somewhere/on/hadoop.tsv'\nOVERWRITE INTO TABLE my_table PARTITION (ds='2014-01-13');"},{"id":"24VE#","section":"VE#","description":"Hive prevent accidental dropping of a table","command":"ALTER TABLE my_table ENABLE/DISABLE NO DROP CASCADE;"},{"id":"25VE#","section":"VE#","description":"Hive Describe function","command":"DESCRIBE FUNCTION EXTENDED function_name;"},{"id":"26VE#","section":"VE#","description":"Hive Show functions","command":"SHOW FUNCTIONS;"},{"id":"27VE#","section":"VE#","description":"Hive Add jars","command":"ADD JAR /path/to/jar/on/local;"},{"id":"28VE#","section":"VE#","description":"Hive Add functions / UDFs","command":"CREATE TEMPORARY FUNCTION nvl AS 'com.company.hive.udf.GenericUDFNVL';"},{"id":"29VE#","section":"VE#","description":"Hive data types","command":"Numeric: tinyint, smallint, int, bigint, float, double, decimal\nDate / Time: timestamp, date\nComplex: array, map<key, value>, struct, union"},{"id":"30VE#","section":"VE#","description":"Add multiple partitions to a HIVE external table (ruby / irb)","command":"(Date.new(2015,2,20)..Date.new(2015,6,12)).each do |x|\n   puts \"alter table your_hive_table add partition (#{x.strftime('year=%Y,month=%m,day=%d')}) location 'hdfs:///hdfs/folder/#{x.strftime('%Y/%m/%d')}';\"\nend"},{"id":"31VE#","section":"VE#","description":"Hive truncate table","command":"TRUNCATE TABLE my_table;"},{"id":"32VE#","section":"VE#","description":"Hive recover partitions for \"non-external\" tables","command":"MSCK REPAIR TABLE my_table;"},{"id":"33VE#","section":"VE#","description":"Hive list of databases","command":"SHOW DATABASES;"},{"id":"34VE#","section":"VE#","description":"Hive list all tables in current database","command":"SHOW TABLES;"},{"id":"35VE#","section":"VE#","description":"Hive run query from command line","command":"hive -e \"SELECT * from table;\""},{"id":"36VE#","section":"VE#","description":"Hive run query from from file","command":"hive -f \"SELECT * from table;\""},{"id":"37VE#","section":"VE#","description":"Hive CLI run bash command","command":"!cat /tmp/file.txt"},{"id":"38VE#","section":"VE#","description":"Hive show all variables","command":"SET;"},{"id":"39VE#","section":"VE#","description":"Hive if syntax","command":"if(boolean testCondition, T valueTrue, T valueFalseOrNull)"},{"id":"40VE#","section":"VE#","description":"Hive convert unix timestamp to a date in specified format","command":"from_unixtime(unix_timestamp_field,'yyyy-MM-dd')"},{"id":"41VE#","section":"VE#","description":"Hive convert unix timestamp to a date in MySQL format e.g. 1970-01-01 00:00:00","command":"from_unixtime(unix_timestamp_field)"},{"id":"42VE#","section":"VE#","description":"Hive get current unix timestamp in seconds","command":"unix_timestamp()"},{"id":"43VE#","section":"VE#","description":"Hive number of days from start to end date / datediff","command":"datediff('2009-03-01', '2009-02-27') = 2"},{"id":"44VE#","section":"VE#","description":"Hive add days to a date","command":"date_add('2008-12-31', 1)"},{"id":"45VE#","section":"VE#","description":"Hive subtract days from a date","command":"date_sub('2008-12-31', 1)"},{"id":"46VE#","section":"VE#","description":"Hive change timezone of a timestamp that is in UTC","command":"from_utc_timestamp('1970-01-01 08:00:00','PST')"},{"id":"47VE#","section":"VE#","description":"Hive change timezone to UTC of a timestamp that is in a different timezone","command":"to_utc_timestamp('1970-01-01 00:00:00','PST')"},{"id":"48VE#","section":"VE#","description":"Hive current date / timestamp","command":"current_date / current_timestamp"},{"id":"49VE#","section":"VE#","description":"Hive check if null","command":"isnull(a)"},{"id":"50VE#","section":"VE#","description":"Hive case statement","command":"CASE a WHEN b THEN c WHEN d THEN e ELSE f END"},{"id":"51VE#","section":"VE#","description":"Hive greatest value, compare values","command":"greatest(v1, v2, ...)"},{"id":"52VE#","section":"VE#","description":"Hive lowest value, compare values","command":"lowest(v1, v2, ...)"},{"id":"53VE#","section":"VE#","description":"Hive function for concatenate strings","command":"concat(‘foo’, ‘bar’, ...) ;"},{"id":"54VE#","section":"VE#","description":"Hive function for position of first occurrence in string","command":"instr(string str, string substr)"},{"id":"55VE#","section":"VE#","description":"Hive function for size / length of a string","command":"length(\"str\") ;"},{"id":"56VE#","section":"VE#","description":"Hive function to lowercase / uppercase a string","command":"lower(string A) or upper(string A)"},{"id":"57VE#","section":"VE#","description":"Hive function to capitalize first letter of every word / name capitalization","command":"initcap(\"test str\") -- => Test Str"},{"id":"58VE#","section":"VE#","description":"Hive function to calculate distance between two strings levenshtein","command":"levenshtein(string A, string B)"},{"id":"59VE#","section":"VE#","description":"Hive function to trim / strip spaces from string","command":"trim (\"  str  \") or ltrim(\"   str\") or rtrim(\"str   \")"},{"id":"60VE#","section":"VE#","description":"Hive function to split a string by regex pattern(returns array)","command":"split(string str, string pattern)"},{"id":"61VE#","section":"VE#","description":"Hive function to substring a field / column","command":"substr(string, int start, int len);"},{"id":"62VE#","section":"VE#","description":"Hive parse JSON field using Json tuple and lateral view","command":"{\"id\": \"12345\", \"field1\": \"text\", \"field2\": \"text\"}\nSELECT a.field1, a.field2 FROM my_table\nlateral view json_tuple(a.raw, 'field1', 'field2')a as field1, field2;"},{"id":"63VE#","section":"VE#","description":"Hive parse json string","command":"{\"id\": \"12345\", \"field1\": { \"inner1\": \"text\"}}\nSELECT get_json_object(my_tbl.event_data, '$.field1.inner1') from my_string_table;"},{"id":"64VE#","section":"VE#","description":"Hive comment a line (only works in scripts)","command":"-- my comment"}]